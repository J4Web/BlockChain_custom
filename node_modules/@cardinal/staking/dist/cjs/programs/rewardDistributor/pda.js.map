{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/programs/rewardDistributor/pda.ts"],"names":[],"mappings":";;;;AAAA,kDAA8C;AAC9C,6CAA4C;AAE5C,wBAIW;AAEX;;;GAGG;AACI,MAAM,iBAAiB,GAAG,CAC/B,mBAA8B,EAC9B,YAAuB,EACO,EAAE;IAChC,OAAO,mBAAS,CAAC,kBAAkB,CACjC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAiB,CAAC;QAC1C,mBAAmB,CAAC,QAAQ,EAAE;QAC9B,YAAY,CAAC,QAAQ,EAAE;KACxB,EACD,6BAA0B,CAC3B,CAAC;AACJ,CAAC,CAAA,CAAC;AAZW,QAAA,iBAAiB,qBAY5B;AAEF;;;GAGG;AACI,MAAM,uBAAuB,GAAG,CACrC,WAAsB,EACQ,EAAE;IAChC,OAAO,mBAAS,CAAC,kBAAkB,CACjC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,0BAAuB,CAAC,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,EAC1E,6BAA0B,CAC3B,CAAC;AACJ,CAAC,CAAA,CAAC;AAPW,QAAA,uBAAuB,2BAOlC","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport {\n  REWARD_DISTRIBUTOR_ADDRESS,\n  REWARD_DISTRIBUTOR_SEED,\n  REWARD_ENTRY_SEED,\n} from \".\";\n\n/**\n * Finds the reward entry id.\n * @returns\n */\nexport const findRewardEntryId = async (\n  rewardDistributorId: PublicKey,\n  stakeEntryId: PublicKey\n): Promise<[PublicKey, number]> => {\n  return PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(REWARD_ENTRY_SEED),\n      rewardDistributorId.toBuffer(),\n      stakeEntryId.toBuffer(),\n    ],\n    REWARD_DISTRIBUTOR_ADDRESS\n  );\n};\n\n/**\n * Finds the reward distributor id.\n * @returns\n */\nexport const findRewardDistributorId = async (\n  stakePoolId: PublicKey\n): Promise<[PublicKey, number]> => {\n  return PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(REWARD_DISTRIBUTOR_SEED), stakePoolId.toBuffer()],\n    REWARD_DISTRIBUTOR_ADDRESS\n  );\n};\n"]}