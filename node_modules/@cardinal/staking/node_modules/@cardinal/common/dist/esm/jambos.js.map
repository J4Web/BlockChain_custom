{"version":3,"file":"jambos.js","sourceRoot":"","sources":["../../src/jambos.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AccountData, StakeEntryData } from \"@cardinal/stake-pool\";\nimport { BN } from \"@project-serum/anchor\";\nimport * as web3 from \"@solana/web3.js\";\n\nconst LEVEL_1_10_PCT = 1.4;\nconst TIER_2_LEVEL = 10;\nconst LEVEL_11_17_PCT = 1.25;\nconst TIER_3_LEVEL = 17;\nconst LEVEL_18_25_PCT = 1.15;\nexport const GROUP_AND_HUNGRY_THRESHOLD = 10000;\n\n/**\n * Calculates the total number of seconds a jambo has been\n * staked on the level up pool given its level number\n * @param level\n * @returns\n */\nexport const secondsFromLevel = (level: number | undefined): number => {\n  if (!level) return 0;\n  let requiredSeconds = 4 * 60 * 60;\n  let difference = requiredSeconds;\n  for (let i = 1; i < level; i++) {\n    let multiplier = LEVEL_1_10_PCT;\n    if (i > TIER_2_LEVEL) {\n      multiplier = LEVEL_11_17_PCT;\n    }\n    if (i > TIER_3_LEVEL) {\n      multiplier = LEVEL_18_25_PCT;\n    }\n    difference = difference * multiplier;\n    requiredSeconds += difference;\n  }\n  return requiredSeconds;\n};\n\n/**\n * Calculate actual level of jambo given the total seconds\n * it has been staked on the level up pool\n * @param totalStakeSeconds\n * @returns\n */\nexport const getLevelNumber = (\n  totalStakeSeconds: number | undefined\n): [number, number] => {\n  let requiredSeconds = 4 * 60 * 60;\n  let difference = requiredSeconds;\n  if (!totalStakeSeconds) return [0, requiredSeconds];\n  const level = 0;\n  for (let i = 0; i <= 25; i++) {\n    if (totalStakeSeconds < Math.floor(requiredSeconds)) {\n      return [i, requiredSeconds];\n    }\n    let multiplier = LEVEL_1_10_PCT;\n    if (i >= TIER_2_LEVEL) {\n      multiplier = LEVEL_11_17_PCT;\n    }\n    if (i >= TIER_3_LEVEL) {\n      multiplier = LEVEL_18_25_PCT;\n    }\n\n    difference = difference * multiplier;\n    requiredSeconds += difference;\n  }\n  return [level, requiredSeconds];\n};\n\n/**\n * Gets the number of active stake seconds\n * on the level up pool given a stake entry\n * @param stakeEntryData\n * @param UTCNow\n * @returns\n */\nexport function getActiveStakeSeconds(\n  stakeEntryData: AccountData<StakeEntryData> | null | undefined,\n  UTCNow: number\n): number {\n  const lastStakedAt = stakeEntryData?.parsed.lastStakedAt.toNumber() || UTCNow;\n  const stakeBoost = (\n    stakeEntryData?.parsed.stakeBoost || new BN(1)\n  ).toNumber();\n  const totalStakeSeconds = (\n    stakeEntryData?.parsed.totalStakeSeconds || new BN(0)\n  ).toNumber();\n  const stakedTime =\n    stakeEntryData?.parsed.lastStaker.toString() !==\n    web3.PublicKey.default.toString()\n      ? totalStakeSeconds +\n        (stakeBoost /\n          (stakeBoost >= GROUP_AND_HUNGRY_THRESHOLD ? 10000 : 100)) *\n          (UTCNow - lastStakedAt)\n      : totalStakeSeconds;\n\n  return stakedTime;\n}\n"]}