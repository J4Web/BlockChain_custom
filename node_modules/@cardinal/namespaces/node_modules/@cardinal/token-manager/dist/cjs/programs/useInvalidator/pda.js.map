{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/programs/useInvalidator/pda.ts"],"names":[],"mappings":";;;AAAA,kDAA8C;AAC9C,6CAA4C;AAE5C,2CAA4E;AAE5E;;;GAGG;AACI,MAAM,yBAAyB,GAAG,KAAK,EAC5C,cAAyB,EACK,EAAE;IAChC,OAAO,MAAM,mBAAS,CAAC,kBAAkB,CACvC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gCAAoB,CAAC,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,EAC1E,mCAAuB,CACxB,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,yBAAyB,6BAOpC","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { USE_INVALIDATOR_ADDRESS, USE_INVALIDATOR_SEED } from \"./constants\";\n\n/**\n * Finds the use invalidator for this token manager.\n * @returns\n */\nexport const findUseInvalidatorAddress = async (\n  tokenManagerId: PublicKey\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(USE_INVALIDATOR_SEED), tokenManagerId.toBuffer()],\n    USE_INVALIDATOR_ADDRESS\n  );\n};\n"]}