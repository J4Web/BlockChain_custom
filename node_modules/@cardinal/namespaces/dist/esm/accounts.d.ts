import type { AccountData } from "@cardinal/common";
import type { Connection, PublicKey } from "@solana/web3.js";
import type { ClaimRequestData, EntryData, NamespaceData, ReverseEntryData } from ".";
export declare function getNamespaceByName(connection: Connection, namespaceName: string): Promise<AccountData<NamespaceData>>;
export declare function getNamespace(connection: Connection, namespaceId: PublicKey): Promise<AccountData<NamespaceData>>;
export declare function getGlobalContext(connection: Connection): Promise<AccountData<NamespaceData>>;
export declare function getAllNamespaces(connection: Connection): Promise<AccountData<NamespaceData>[]>;
export declare function getNameEntry(connection: Connection, namespaceName: string, entryName: string): Promise<AccountData<EntryData>>;
export declare function getNameEntriesForNamespace(connection: Connection, namespaceName: string, entryNames: string[]): Promise<(AccountData<EntryData> & {
    name: string;
})[]>;
export declare function getClaimRequest(connection: Connection, namespaceName: string, entryName: string, requestor: PublicKey): Promise<AccountData<ClaimRequestData>>;
export declare function getPendingClaimRequests(connection: Connection): Promise<AccountData<ClaimRequestData>[]>;
export declare function getReverseNameEntryForNamespace(connection: Connection, pubkey: PublicKey, namespace: PublicKey): Promise<AccountData<ReverseEntryData>>;
export declare function getReverseEntry(connection: Connection, pubkey: PublicKey, namespace?: PublicKey, disallowGlobal?: boolean): Promise<AccountData<ReverseEntryData>>;
//# sourceMappingURL=accounts.d.ts.map