import type { Wallet } from "@saberhq/solana-contrib";
import type { AccountMeta, Connection, Transaction } from "@solana/web3.js";
import { PublicKey } from "@solana/web3.js";
export declare function formatName(namespace: string, name: string): string;
export declare function breakName(fullName: string): [string, string];
export declare function breakIdentity(fullName: string): [string, string];
/**
 * shorten the checksummed version of the input address to have 4 characters at start and end
 * @param address
 * @param chars
 * @returns
 */
export declare function shortenAddress(address: string, chars?: number): string;
export declare function displayAddress(address: string, shorten?: boolean): string;
export declare function tryGetName(connection: Connection, pubkey: PublicKey, namespace?: PublicKey, disallowGlobal?: boolean): Promise<string | undefined>;
export declare function nameForDisplay(connection: Connection, pubkey: PublicKey, namespace: PublicKey): Promise<string>;
export declare const withRemainingAccountsForClaim: (connection: Connection, transaction: Transaction, wallet: Wallet, namespaceId: PublicKey, tokenManagerId: PublicKey, duration?: number) => Promise<AccountMeta[]>;
//# sourceMappingURL=utils.d.ts.map