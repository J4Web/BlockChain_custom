{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":";;;;AAAA,yDAAyD;AACzD,0EAA0E;AAC1E,8DAAwC;AAExC;;;;GAIG;AACH,oEAAoE;AACpE,6BAA6B;AAC7B,KAAK;AAEL,MAAM,WAAW,GAA4B;IAC3C,CAAC,cAAc,CAAC,EAAE,gCAAgC;IAClD,OAAO,EAAE,gCAAgC;IACzC,MAAM,EAAE,oDAAoD;IAC5D,OAAO,EAAE,iCAAiC;IAC1C,QAAQ,EAAE,wBAAwB;CACnC,CAAC;AAEF;;;;;GAKG;AACI,MAAM,aAAa,GAAG,CAC3B,OAAsB,EACtB,cAAc,GAAG,SAAS,EACT,EAAE;IACnB,OAAO,IAAI,IAAI,CAAC,UAAU,CACxB,OAAO,CAAC,GAAG,CAAC,OAAO,IAAK,WAAW,CAAC,OAAO,IAAI,cAAc,CAAY,EACzE,QAAQ,CACT,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,aAAa,iBAQxB","sourcesContent":["// import type { Wallet } from \"@saberhq/solana-contrib\";\n// import type { WalletContextState } from \"@solana/wallet-adapter-react\";\nimport * as web3 from \"@solana/web3.js\";\n\n/**\n * Wrap WalletContextState interface into Wallet interface\n * @param wallet\n * @returns\n */\n// export const asWallet = (wallet: WalletContextState): Wallet => {\n//   return wallet as Wallet;\n// };\n\nconst networkURLs: { [s: string]: string } = {\n  [\"mainnet-beta\"]: \"https://ssc-dao.genesysgo.net/\",\n  mainnet: \"https://ssc-dao.genesysgo.net/\",\n  devnet: \"https://psytrbhymqlkfrhudd.dev.genesysgo.net:8899/\",\n  testnet: \"https://api.testnet.solana.com/\",\n  localnet: \"http://localhost:8899/\",\n};\n\n/**\n * Create and return new Connection object\n * @param cluster\n * @param defaultCluster\n * @returns\n */\nexport const connectionFor = (\n  cluster: string | null,\n  defaultCluster = \"mainnet\"\n): web3.Connection => {\n  return new web3.Connection(\n    process.env.RPC_URL || (networkURLs[cluster || defaultCluster] as string),\n    \"recent\"\n  );\n};\n"]}