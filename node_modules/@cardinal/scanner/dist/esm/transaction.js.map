{"version":3,"file":"transaction.js","sourceRoot":"","sources":["../../src/transaction.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAElD,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,UAAsB,EACtB,MAAc,EACd,gBAA2B,EACL,EAAE;IACxB,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;IACtC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC5D,OAAO,WAAW,CAAC;AACrB,CAAC,CAAA,CAAC","sourcesContent":["import type { Wallet } from \"@saberhq/solana-contrib\";\nimport type { Connection, PublicKey } from \"@solana/web3.js\";\nimport { Transaction } from \"@solana/web3.js\";\nimport { scan } from \"./programs/cardinalScanner\";\n\nexport const withScan = async (\n  connection: Connection,\n  wallet: Wallet,\n  additionalSigner: PublicKey\n): Promise<Transaction> => {\n  const transaction = new Transaction();\n  transaction.add(scan(connection, wallet, additionalSigner));\n  return transaction;\n};\n"]}