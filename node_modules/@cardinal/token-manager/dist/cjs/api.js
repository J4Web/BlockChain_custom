"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extendUsages = exports.extendExpiration = exports.claimToken = exports.unissueToken = exports.issueToken = exports.invalidate = exports.useTransaction = void 0;
const tslib_1 = require("tslib");
const web3_js_1 = require("@solana/web3.js");
const _1 = require(".");
const useTransaction = (connection, wallet, mintId, usages, collector) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () { return (0, _1.withUse)(new web3_js_1.Transaction(), connection, wallet, mintId, usages, collector); });
exports.useTransaction = useTransaction;
const invalidate = (connection, wallet, mintId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () { return (0, _1.withInvalidate)(new web3_js_1.Transaction(), connection, wallet, mintId); });
exports.invalidate = invalidate;
const issueToken = (connection, wallet, rentalParameters) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () { return (0, _1.withIssueToken)(new web3_js_1.Transaction(), connection, wallet, rentalParameters); });
exports.issueToken = issueToken;
const unissueToken = (connection, wallet, mintId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () { return (0, _1.withUnissueToken)(new web3_js_1.Transaction(), connection, wallet, mintId); });
exports.unissueToken = unissueToken;
const claimToken = (connection, wallet, tokenManagerId, additionalOptions) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    return (0, _1.withClaimToken)(new web3_js_1.Transaction(), connection, wallet, tokenManagerId, additionalOptions);
});
exports.claimToken = claimToken;
const extendExpiration = (connection, wallet, tokenManagerId, paymentAmount) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    return (0, _1.withExtendExpiration)(new web3_js_1.Transaction(), connection, wallet, tokenManagerId, paymentAmount);
});
exports.extendExpiration = extendExpiration;
const extendUsages = (connection, wallet, tokenManagerId, paymentAmount) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    return (0, _1.withExtendUsages)(new web3_js_1.Transaction(), connection, wallet, tokenManagerId, paymentAmount);
});
exports.extendUsages = extendUsages;
//# sourceMappingURL=api.js.map