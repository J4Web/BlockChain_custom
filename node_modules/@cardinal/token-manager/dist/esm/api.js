import { __awaiter } from "tslib";
import { Transaction } from "@solana/web3.js";
import { withClaimToken, withExtendExpiration, withExtendUsages, withInvalidate, withIssueToken, withUnissueToken, withUse, } from ".";
export const useTransaction = (connection, wallet, mintId, usages, collector) => __awaiter(void 0, void 0, void 0, function* () { return withUse(new Transaction(), connection, wallet, mintId, usages, collector); });
export const invalidate = (connection, wallet, mintId) => __awaiter(void 0, void 0, void 0, function* () { return withInvalidate(new Transaction(), connection, wallet, mintId); });
export const issueToken = (connection, wallet, rentalParameters) => __awaiter(void 0, void 0, void 0, function* () { return withIssueToken(new Transaction(), connection, wallet, rentalParameters); });
export const unissueToken = (connection, wallet, mintId) => __awaiter(void 0, void 0, void 0, function* () { return withUnissueToken(new Transaction(), connection, wallet, mintId); });
export const claimToken = (connection, wallet, tokenManagerId, additionalOptions) => __awaiter(void 0, void 0, void 0, function* () {
    return withClaimToken(new Transaction(), connection, wallet, tokenManagerId, additionalOptions);
});
export const extendExpiration = (connection, wallet, tokenManagerId, paymentAmount) => __awaiter(void 0, void 0, void 0, function* () {
    return withExtendExpiration(new Transaction(), connection, wallet, tokenManagerId, paymentAmount);
});
export const extendUsages = (connection, wallet, tokenManagerId, paymentAmount) => __awaiter(void 0, void 0, void 0, function* () {
    return withExtendUsages(new Transaction(), connection, wallet, tokenManagerId, paymentAmount);
});
//# sourceMappingURL=api.js.map