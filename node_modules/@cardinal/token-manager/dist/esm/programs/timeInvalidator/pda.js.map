{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/programs/timeInvalidator/pda.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAC;AAE9E;;;GAGG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG,CACxC,cAAyB,EACK,EAAE;IAChC,OAAO,MAAM,SAAS,CAAC,kBAAkB,CACvC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,EAC3E,wBAAwB,CACzB,CAAC;AACJ,CAAC,CAAA,CAAC","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { TIME_INVALIDATOR_ADDRESS, TIME_INVALIDATOR_SEED } from \"./constants\";\n\n/**\n * Finds the token manager address.\n * @returns\n */\nexport const findTimeInvalidatorAddress = async (\n  tokenManagerId: PublicKey\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(TIME_INVALIDATOR_SEED), tokenManagerId.toBuffer()],\n    TIME_INVALIDATOR_ADDRESS\n  );\n};\n"]}