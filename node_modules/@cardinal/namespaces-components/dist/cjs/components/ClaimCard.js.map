{"version":3,"file":"ClaimCard.js","sourceRoot":"","sources":["../../../src/components/ClaimCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import styled from '@emotion/styled'\nimport type { Wallet } from '@saberhq/solana-contrib'\nimport type { Cluster, Connection } from '@solana/web3.js'\nimport { useState } from 'react'\n\nimport { Alert } from '../common/Alert'\nimport { ButtonLight } from '../common/Button'\nimport { useReverseEntry } from '../hooks/useReverseEntry'\nimport { TWITTER_NAMESPACE_NAME } from '../utils/constants'\nimport { formatTwitterLink } from '../utils/format'\nimport { NameEntryClaim } from './NameEntryClaim'\nimport { NameManager } from './NameManager'\nimport { PoweredByFooter } from './PoweredByFooter'\n\nexport type ClaimCardProps = {\n  dev?: boolean\n  cluster?: Cluster\n  wallet?: Wallet\n  connection?: Connection\n  secondaryConnection?: Connection\n  appName?: string\n  appTwitter?: string\n  namespaceName?: string\n  showManage?: boolean\n  notify?: (arg: { message?: string; txid?: string }) => void\n  onComplete?: (arg: string) => void\n}\n\nexport const ClaimCard = ({\n  appName,\n  appTwitter,\n  dev,\n  cluster,\n  connection,\n  secondaryConnection,\n  wallet,\n  notify,\n  onComplete,\n  showManage: showManageDefault,\n  namespaceName = TWITTER_NAMESPACE_NAME,\n}: ClaimCardProps) => {\n  const [showManage, setShowManage] = useState(showManageDefault)\n  const reverseEntry = useReverseEntry(\n    connection,\n    namespaceName,\n    wallet?.publicKey\n  )\n  return (\n    <>\n      <ClaimCardOuter>\n        <div className=\"relative px-2 pb-8 md:px-8 md:pt-2\">\n          <Instruction>\n            {appName ? `${appName} uses` : 'Use'} Cardinal to link your Twitter\n            identity to your <strong>Solana</strong> address.\n          </Instruction>\n          {(!wallet?.publicKey || !connection) && (\n            <Alert\n              style={{ marginBottom: '20px' }}\n              message={\n                <>\n                  <div>Connect wallet to continue</div>\n                </>\n              }\n              type=\"warning\"\n              showIcon\n            />\n          )}\n          {!reverseEntry.isFetching && reverseEntry.data?.parsed.entryName && (\n            <Alert\n              style={{ marginBottom: '20px', width: '100%' }}\n              message={\n                <>\n                  <div>\n                    Your address is linked to{' '}\n                    {formatTwitterLink(reverseEntry.data?.parsed.entryName)}.\n                    Link a new Twitter handle below.\n                  </div>\n                </>\n              }\n              type=\"info\"\n              showIcon\n            />\n          )}\n          {connection && wallet?.publicKey && (\n            <ButtonLight\n              className=\"absolute right-8 z-10\"\n              onClick={() => setShowManage((m) => !m)}\n            >\n              {showManage ? 'Back to linking' : 'Manage linked accounts'}\n            </ButtonLight>\n          )}\n          {connection &&\n            wallet &&\n            (showManage ? (\n              <NameManager\n                cluster={cluster}\n                connection={connection}\n                wallet={wallet}\n                namespaceName={namespaceName}\n              />\n            ) : (\n              <NameEntryClaim\n                dev={dev}\n                cluster={cluster}\n                wallet={wallet}\n                connection={connection}\n                secondaryConnection={secondaryConnection}\n                appName={appName}\n                appTwitter={appTwitter}\n                setShowManage={setShowManage}\n                notify={notify}\n                onComplete={onComplete}\n              />\n            ))}\n          <PoweredByFooter />\n        </div>\n      </ClaimCardOuter>\n    </>\n  )\n}\n\nexport const ClaimCardOuter = styled.div`\n  width 100%;\n  height: 100%;\n  position: relative;\n  margin: 0px auto;\n  min-height: 200px;\n  padding: 0px 20px;\n`\n\nconst Instruction = styled.h2`\n  margin-top: 0px;\n  margin-bottom: 20px;\n  font-weight: normal;\n  font-size: 24px;\n  line-height: 30px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #000000;\n`\n"]}