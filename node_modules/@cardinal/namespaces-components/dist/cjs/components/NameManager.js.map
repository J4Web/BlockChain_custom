{"version":3,"file":"NameManager.js","sourceRoot":"","sources":["../../../src/components/NameManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getQueryParam } from '@cardinal/common'\nimport { breakName, formatName } from '@cardinal/namespaces'\nimport type { Wallet } from '@saberhq/solana-contrib'\nimport type { Connection } from '@solana/web3.js'\nimport type { ReactElement } from 'react'\nimport { useEffect, useState } from 'react'\nimport { AiFillStar } from 'react-icons/ai'\nimport { BiUnlink } from 'react-icons/bi'\n\nimport { Alert } from '../common/Alert'\nimport { ButtonLight } from '../common/Button'\nimport { LoadingSpinner } from '../common/LoadingSpinner'\nimport { useHandleSetDefault } from '../handlers/useHandleSetDefault'\nimport { useHandleUnlink } from '../handlers/useHandleUnlink'\nimport { useReverseEntry } from '../hooks/useReverseEntry'\nimport type { UserTokenData } from '../hooks/useUserNamesForNamespace'\nimport { useUserNamesForNamespace } from '../hooks/useUserNamesForNamespace'\nimport { formatTwitterLink } from '../utils/format'\nimport { BoltIcon } from './icons'\nimport { StepDetail } from './StepDetail'\n\nexport const nameFromMint = (name: string, uri: string): [string, string] => {\n  if (uri.includes('name')) {\n    return [name, getQueryParam(uri, 'name') || '']\n  }\n  return [breakName(name || '')[0], breakName(name || '')[1]]\n}\n\nexport const NameEntryRow = ({\n  cluster,\n  connection,\n  wallet,\n  namespaceName,\n  userTokenData,\n  setError,\n  setSuccess,\n}: {\n  cluster?: string\n  connection: Connection\n  wallet: Wallet\n  namespaceName: string\n  userTokenData: UserTokenData\n  setError: (e: unknown) => void\n  setSuccess: (e: ReactElement) => void\n}) => {\n  const userNamesForNamespace = useUserNamesForNamespace(\n    connection,\n    wallet.publicKey,\n    namespaceName\n  )\n  const reverseEntry = useReverseEntry(\n    connection,\n    namespaceName,\n    wallet.publicKey\n  )\n  const handleUnlink = useHandleUnlink(\n    connection,\n    wallet,\n    namespaceName,\n    userTokenData\n  )\n  const handleSetDefault = useHandleSetDefault(\n    connection,\n    wallet,\n    namespaceName\n  )\n  useEffect(() => {\n    if (handleUnlink.isLoading || handleSetDefault.isLoading) {\n      setError(undefined)\n    }\n  }, [handleUnlink.isLoading, handleSetDefault.isLoading])\n  return (\n    <div className=\"flex items-center justify-between gap-5 px-2\">\n      <div\n        className=\"cursor-point flex cursor-pointer items-center gap-1\"\n        style={{ fontSize: '14px' }}\n      >\n        {formatTwitterLink(\n          nameFromMint(\n            userTokenData.metaplexData?.parsed.data.name || '',\n            userTokenData.metaplexData?.parsed.data.uri || ''\n          )[1]\n        )}\n        {reverseEntry.data &&\n          formatName(namespaceName, reverseEntry.data.parsed.entryName) ===\n            formatName(\n              ...nameFromMint(\n                userTokenData.metaplexData?.parsed.data.name || '',\n                userTokenData.metaplexData?.parsed.data.uri || ''\n              )\n            ) && <AiFillStar />}\n      </div>\n      <div className=\"flex items-center gap-2\">\n        {(!reverseEntry.data ||\n          (reverseEntry.data &&\n            formatName(namespaceName, reverseEntry.data.parsed.entryName) !==\n              formatName(\n                ...nameFromMint(\n                  userTokenData.metaplexData?.parsed.data.name || '',\n                  userTokenData.metaplexData?.parsed.data.uri || ''\n                )\n              ))) && (\n          <ButtonLight\n            onClick={() =>\n              handleSetDefault.mutate(\n                {\n                  tokenData: userTokenData,\n                },\n                {\n                  onSuccess: (txid) => {\n                    userNamesForNamespace.remove()\n                    reverseEntry.refetch()\n                    setSuccess(\n                      <div>\n                        Succesfully set default with{' '}\n                        <a\n                          className=\"cursor-pointer text-blue-500\"\n                          target={`_blank`}\n                          href={`https://explorer.solana.com/tx/${txid}?cluster=${cluster}`}\n                        >\n                          transaction\n                        </a>\n                        . Changes will be reflected shortly.\n                      </div>\n                    )\n                  },\n                  onError: (e) => setError(e),\n                }\n              )\n            }\n          >\n            {handleSetDefault.isLoading ? (\n              <LoadingSpinner height=\"15px\" fill=\"#000\" />\n            ) : (\n              <>Set Default</>\n            )}\n          </ButtonLight>\n        )}\n        <ButtonLight\n          className=\"flex items-center gap-1\"\n          onClick={async () =>\n            handleUnlink.mutate(\n              {\n                reverseNameEntryData:\n                  reverseEntry.data &&\n                  formatName(\n                    namespaceName,\n                    reverseEntry.data.parsed.entryName\n                  ) ===\n                    formatName(\n                      ...nameFromMint(\n                        userTokenData.metaplexData?.parsed.data.name || '',\n                        userTokenData.metaplexData?.parsed.data.uri || ''\n                      )\n                    )\n                    ? reverseEntry.data\n                    : undefined,\n              },\n              {\n                onSuccess: (txid) => {\n                  userNamesForNamespace.remove()\n                  reverseEntry.refetch()\n                  setSuccess(\n                    <div>\n                      Succesfully unlinked{' '}\n                      {formatTwitterLink(\n                        nameFromMint(\n                          userTokenData.metaplexData?.parsed.data.name || '',\n                          userTokenData.metaplexData?.parsed.data.uri || ''\n                        )[1]\n                      )}\n                      . Changes will be reflected shortly.{' '}\n                      <a\n                        className=\"cursor-pointer text-blue-500\"\n                        target={`_blank`}\n                        href={`https://explorer.solana.com/tx/${txid}?cluster=${cluster}`}\n                      >\n                        transaction\n                      </a>\n                    </div>\n                  )\n                },\n                onError: (e) => setError(e),\n              }\n            )\n          }\n        >\n          {handleUnlink.isLoading ? (\n            <LoadingSpinner height=\"15px\" fill=\"#000\" />\n          ) : (\n            <>\n              <BiUnlink />\n              Unlink\n            </>\n          )}\n        </ButtonLight>\n      </div>\n    </div>\n  )\n}\n\nexport const NameManager = ({\n  connection,\n  wallet,\n  namespaceName,\n}: {\n  cluster?: string\n  connection: Connection\n  wallet: Wallet\n  namespaceName: string\n}) => {\n  const [error, setError] = useState<unknown>()\n  const [success, setSuccess] = useState<ReactElement>()\n  const handleSetDefault = useHandleSetDefault(\n    connection,\n    wallet,\n    namespaceName\n  )\n  const userNamesForNamespace = useUserNamesForNamespace(\n    connection,\n    wallet.publicKey,\n    namespaceName\n  )\n  const reverseEntry = useReverseEntry(\n    connection,\n    namespaceName,\n    wallet.publicKey\n  )\n  return (\n    <div className=\"mb-10 flex flex-col gap-2\">\n      <StepDetail\n        icon={<BoltIcon />}\n        title=\"Manage existing handles\"\n        description={<></>}\n      />\n      <div className=\"my-1 h-[1px] bg-gray-200\"></div>\n      {!userNamesForNamespace.isFetched || !reverseEntry.isFetched ? (\n        <>\n          <div className=\"h-8 w-full animate-pulse rounded-lg bg-gray-200\"></div>\n          <div className=\"h-8 w-full animate-pulse rounded-lg bg-gray-200\"></div>\n        </>\n      ) : userNamesForNamespace.data?.length === 0 ? (\n        <div className=\"px-2 text-gray-400\">No names found</div>\n      ) : (\n        <>\n          {userNamesForNamespace.data\n            ?.sort((userTokenData) =>\n              reverseEntry.data &&\n              formatName(namespaceName, reverseEntry.data.parsed.entryName) ===\n                formatName(\n                  ...nameFromMint(\n                    userTokenData.metaplexData?.parsed.data.name || '',\n                    userTokenData.metaplexData?.parsed.data.uri || ''\n                  )\n                )\n                ? -1\n                : 1\n            )\n            .map((userTokenData) => (\n              <NameEntryRow\n                key={userTokenData.tokenAccount?.pubkey.toString()}\n                connection={connection}\n                wallet={wallet}\n                namespaceName={namespaceName}\n                userTokenData={userTokenData}\n                setError={setError}\n                setSuccess={setSuccess}\n              />\n            ))}\n          {handleSetDefault.error && (\n            <Alert\n              style={{\n                marginTop: '10px',\n                height: 'auto',\n                wordBreak: 'break-word',\n              }}\n              message={\n                <>\n                  <div>{`${handleSetDefault.error}`}</div>\n                </>\n              }\n              type=\"error\"\n              showIcon\n            />\n          )}\n          {error && (\n            <Alert\n              style={{\n                marginTop: '10px',\n                height: 'auto',\n                wordBreak: 'break-word',\n              }}\n              message={\n                <>\n                  <div>{`${error}`}</div>\n                </>\n              }\n              type=\"error\"\n              showIcon\n            />\n          )}\n          {success && (\n            <Alert\n              style={{\n                marginTop: '10px',\n                height: 'auto',\n                wordBreak: 'break-word',\n              }}\n              message={success}\n              type=\"success\"\n              showIcon\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n"]}