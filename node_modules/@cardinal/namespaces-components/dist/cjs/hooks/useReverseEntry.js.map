{"version":3,"file":"useReverseEntry.js","sourceRoot":"","sources":["../../../src/hooks/useReverseEntry.ts"],"names":[],"mappings":";;;;AAEA,qDAAuE;AAEvE,6CAAsC;AAE/B,MAAM,eAAe,GAAG,CAC7B,UAAkC,EAClC,aAAqB,EACrB,MAA6B,EAC7B,EAAE;IACF,OAAO,IAAA,sBAAQ,EACb,CAAC,iBAAiB,EAAE,aAAa,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,CAAC,EACtD,GAAS,EAAE;QACT,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU;YAAE,OAAM;QAClC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,IAAA,4BAAe,EAAC,aAAa,CAAC,CAAA;QAC1D,MAAM,YAAY,GAAG,MAAM,IAAA,4BAAe,EACxC,UAAU,EACV,MAAM,EACN,WAAW,CACZ,CAAA;QACD,OAAO,YAAY,IAAI,SAAS,CAAA;IAClC,CAAC,CAAA,EACD,EAAE,cAAc,EAAE,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE,CACvD,CAAA;AACH,CAAC,CAAA;AAnBY,QAAA,eAAe,mBAmB3B","sourcesContent":["import type { AccountData } from '@cardinal/common'\nimport type { ReverseEntryData } from '@cardinal/namespaces'\nimport { findNamespaceId, getReverseEntry } from '@cardinal/namespaces'\nimport type { Connection, PublicKey } from '@solana/web3.js'\nimport { useQuery } from 'react-query'\n\nexport const useReverseEntry = (\n  connection: Connection | undefined,\n  namespaceName: string,\n  pubkey: PublicKey | undefined\n) => {\n  return useQuery<AccountData<ReverseEntryData> | undefined>(\n    ['useReverseEntry', namespaceName, pubkey?.toString()],\n    async () => {\n      if (!pubkey || !connection) return\n      const [namespaceId] = await findNamespaceId(namespaceName)\n      const reverseEntry = await getReverseEntry(\n        connection,\n        pubkey,\n        namespaceId\n      )\n      return reverseEntry || undefined\n    },\n    { refetchOnMount: false, refetchOnWindowFocus: false }\n  )\n}\n"]}