import type { CertificateData } from '@cardinal/certificates';
import type { AccountData } from '@cardinal/common';
import type { TokenManagerData } from '@cardinal/token-manager/dist/cjs/programs/tokenManager';
import type * as metaplex from '@metaplex-foundation/mpl-token-metadata';
import type { Wallet } from '@saberhq/solana-contrib';
import type { Connection } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
export interface HandleSetParam {
    metaplexData?: {
        pubkey: PublicKey;
        parsed: metaplex.MetadataData;
    } | null;
    tokenManager?: AccountData<TokenManagerData>;
    certificate?: AccountData<CertificateData> | null;
}
export declare const useHandleSetDefault: (connection: Connection, wallet: Wallet, namespaceName: string) => import("react-query").UseMutationResult<string, unknown, {
    tokenData?: HandleSetParam | undefined;
}, unknown>;
//# sourceMappingURL=useHandleSetDefault.d.ts.map