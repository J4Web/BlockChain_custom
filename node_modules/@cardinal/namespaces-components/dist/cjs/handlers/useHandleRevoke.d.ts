import type { CertificateData } from '@cardinal/certificates';
import type { AccountData } from '@cardinal/common';
import type { TokenManagerData } from '@cardinal/token-manager/dist/cjs/programs/tokenManager';
import type * as metaplex from '@metaplex-foundation/mpl-token-metadata';
import type { Wallet } from '@saberhq/solana-contrib';
import type { Cluster, PublicKey } from '@solana/web3.js';
export interface HandleSetParam {
    metaplexData?: {
        pubkey: PublicKey;
        parsed: metaplex.MetadataData;
    } | null;
    tokenManager?: AccountData<TokenManagerData>;
    certificate?: AccountData<CertificateData> | null;
}
export declare const useHandleRevoke: (wallet: Wallet, cluster: Cluster, dev: boolean) => import("react-query").UseMutationResult<void, unknown, {
    tweetId?: string | undefined;
    handle?: string | undefined;
}, unknown>;
//# sourceMappingURL=useHandleRevoke.d.ts.map