"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useHandleVerify = void 0;
const tslib_1 = require("tslib");
const react_query_1 = require("react-query");
const constants_1 = require("../utils/constants");
const useHandleVerify = (wallet, cluster, dev) => {
    return (0, react_query_1.useMutation)([wallet.publicKey.toString()], ({ tweetId, handle, }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
        if (!handle || !tweetId)
            return;
        const response = yield fetch(`${(0, constants_1.apiBase)(dev)}/namespaces/twitter/verify?tweetId=${tweetId}&publicKey=${wallet === null || wallet === void 0 ? void 0 : wallet.publicKey.toString()}&handle=${handle}${cluster && `&cluster=${cluster}`}`);
        const json = yield response.json();
        if (response.status !== 200)
            throw new Error(json.message);
        console.log('Verification response: ', json);
        return;
    }), {
        onError: (e) => {
            console.log(e);
        },
    });
};
exports.useHandleVerify = useHandleVerify;
//# sourceMappingURL=useHandleVerify.js.map