{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/modal/index.tsx"],"names":[],"mappings":";;;;;AAAA,qEAAoC;AACpC,+EAA8C;AAC9C,iCAAkD;AAElD,mCAAmC;AAU5B,MAAM,KAAK,GAAyB,CAAC,EAC1C,QAAQ,EACR,MAAM,EACN,SAAS,EACT,aAAa,GAAG,IAAI,EACpB,eAAe,GAAG,KAAK,GACZ,EAAE,EAAE;IACf,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAA;IAC5C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,CAAC,MAAM;YACL,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE;gBACd,UAAU,CAAC,KAAK,CAAC,CAAA;YACnB,CAAC,EAAE,GAAG,CAAC;YACT,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;IACtB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,CACL,2DACE,uBAAC,mBAAmB,kBAClB,MAAM,EAAE,MAAM,EACd,aAAa,EAAE,aAAa,EAC5B,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACb,CAAC,CAAC,eAAe,EAAE,CAAA;gBACnB,CAAC,CAAC,cAAc,EAAE,CAAA;gBAClB,SAAS,EAAE,CAAA;YACb,CAAC,gBAED,wBAAC,YAAY,kBACX,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;oBACb,CAAC,CAAC,eAAe,EAAE,CAAA;oBACnB,CAAC,CAAC,cAAc,EAAE,CAAA;gBACpB,CAAC,iBAED,wBAAC,OAAO,eACN,iCAAO,EACN,eAAe,CAAC,CAAC,CAAC,CACjB,iCAAO,CACR,CAAC,CAAC,CAAC,CACF,uBAAC,UAAU,kBACT,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;oCACb,CAAC,CAAC,eAAe,EAAE,CAAA;oCACnB,CAAC,CAAC,cAAc,EAAE,CAAA;oCAClB,SAAS,EAAE,CAAA;gCACb,CAAC,gBAED,uBAAC,iBAAS,KAAG,IACF,CACd,IACO,EACT,OAAO,IAAI,QAAQ,KACP,IACK,GACrB,CACJ,CAAA;AACH,CAAC,CAAA;AAtDY,QAAA,KAAK,SAsDjB;AAED,MAAM,OAAO,GAAG,gBAAM,CAAC,GAAG,CAAA;;;;;;;;CAQzB,CAAA;AAED,MAAM,UAAU,GAAG,gBAAM,CAAC,GAAG,CAAA;;;;;aAKhB,IAAA,gBAAM,EAAC,GAAG,EAAE,SAAS,CAAC;;;CAGlC,CAAA;AAED,MAAM,YAAY,GAAG,gBAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;CAoB9B,CAAA;AAED,MAAM,mBAAmB,GAAG,gBAAM,CAAC,GAAG,CAGpC;;;;;gBAKc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;aACpD,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBACjC,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,CAClC,aAAa,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM;;CAEjD,CAAA","sourcesContent":["import styled from '@emotion/styled'\nimport darken from 'polished/lib/color/darken'\nimport React, { useEffect, useState } from 'react'\n\nimport { CloseIcon } from './icons'\n\nexport interface ModalProps {\n  children: React.ReactNode\n  isOpen: boolean\n  onDismiss: () => void\n  darkenOverlay?: boolean\n  hideCloseButton?: boolean\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  children,\n  isOpen,\n  onDismiss,\n  darkenOverlay = true,\n  hideCloseButton = false,\n}: ModalProps) => {\n  const [mounted, setMounted] = useState(true)\n  useEffect(() => {\n    !isOpen\n      ? setTimeout(() => {\n          setMounted(false)\n        }, 200)\n      : setMounted(true)\n  }, [isOpen])\n\n  return (\n    <>\n      <StyledDialogOverlay\n        isOpen={isOpen}\n        darkenOverlay={darkenOverlay}\n        onClick={(e) => {\n          e.stopPropagation()\n          e.preventDefault()\n          onDismiss()\n        }}\n      >\n        <ModalWrapper\n          onClick={(e) => {\n            e.stopPropagation()\n            e.preventDefault()\n          }}\n        >\n          <TopArea>\n            <div />\n            {hideCloseButton ? (\n              <div />\n            ) : (\n              <ButtonIcon\n                onClick={(e) => {\n                  e.stopPropagation()\n                  e.preventDefault()\n                  onDismiss()\n                }}\n              >\n                <CloseIcon />\n              </ButtonIcon>\n            )}\n          </TopArea>\n          {mounted && children}\n        </ModalWrapper>\n      </StyledDialogOverlay>\n    </>\n  )\n}\n\nconst TopArea = styled.div`\n  padding: 12px 16px 0px 16px;\n  top: 12px;\n  left: 16px;\n  right: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst ButtonIcon = styled.div`\n  flex: 0 0 24px;\n  cursor: pointer;\n  color: #ccd2e3;\n  &:hover {\n    color: ${darken(0.1, '#ccd2e3')};\n  }\n  transition: 0.1s ease;\n`\n\nconst ModalWrapper = styled.div`\n  * {\n    box-sizing: border-box;\n  }\n  font-family: SFHello, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n    'Segoe UI Symbol';\n  position: relative;\n  box-shadow: 0px 4px 16px rgba(207, 207, 207, 0.25);\n  width: 100%;\n  max-width: 560px;\n  border-radius: 8px;\n  background: #fff;\n  color: #696969;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n  margin: 10vh auto;\n`\n\nconst StyledDialogOverlay = styled.div<{\n  darkenOverlay?: boolean\n  isOpen?: boolean\n}>`\n  transition: 0.2s all;\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  visibility: ${({ isOpen }) => (isOpen ? 'visible' : 'collapse')};\n  opacity: ${({ isOpen }) => (isOpen ? '1' : '0')};\n  background: ${({ darkenOverlay }) =>\n    darkenOverlay ? 'rgba(0, 0, 0, 0.55)' : 'none'};\n  z-index: 1000;\n`\n"]}