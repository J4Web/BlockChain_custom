{"version":3,"file":"Button.js","sourceRoot":"","sources":["../../../src/common/Button.tsx"],"names":[],"mappings":"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","sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { lighten } from 'polished'\nimport { useState } from 'react'\n\nimport { LoadingSpinner } from './LoadingSpinner'\n\nexport type ButtonProps = {\n  variant: 'primary' | 'secondary' | 'tertiary'\n  boxShadow?: boolean\n  disabled?: boolean\n  bgColor?: string\n}\n\nexport const Button = styled.button<ButtonProps>`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n  border: none;\n  outline: none;\n  height: 26px;\n  font-size: 12px;\n  mix-blend-mode: normal;\n  box-shadow: ${({ boxShadow }) =>\n    boxShadow ? '0px 4px 4px rgba(0, 0, 0, 0.25)' : ''};\n  border-radius: 4px;\n  padding: 0 12px;\n  transition: 0.2s background;\n  ${({ variant = 'primary', disabled, bgColor = undefined }) => {\n    return bgColor\n      ? css`\n          background: ${bgColor};\n          color: ${getColorByBgColor(bgColor)};\n          &:hover {\n            background: ${!disabled && lighten(0.1, bgColor)}};\n          }\n        `\n      : variant === 'primary'\n      ? css`\n          background: rgb(29, 155, 240);\n          color: #fff;\n          &:hover {\n            background: ${!disabled && lighten(0.1, 'rgb(29, 155, 240)')}};\n          }\n        `\n      : variant === 'secondary'\n      ? css`\n          background: #000;\n          color: #fff;\n          &:hover {\n            background: ${!disabled && lighten(0.1, '#000')};\n          }\n        `\n      : css`\n          background: rgb(255, 255, 255, 0.15);\n          color: #fff;\n          &:hover {\n            background: ${!disabled && lighten(0.05, '#000')};\n          }\n        `\n  }}\n  & > span {\n    font-size: 14px;\n  }\n`\n\nexport const ButtonLight = styled.div`\n  border-radius: 5px;\n  padding: 5px 8px;\n  border: none;\n  background: #eee;\n  color: #777;\n  cursor: pointer;\n  transition: 0.1s all;\n  &:hover {\n    background: #ddd;\n  }\n`\n\nexport const hexColor = (colorString: string): string => {\n  if (colorString.includes('#')) return colorString\n  const [r, g, b] = colorString\n    .replace('rgb(', '')\n    .replace('rgba(', '')\n    .replace(')', '')\n    .replace(' ', '')\n    .split(',')\n  return (\n    '#' +\n    [r, g, b]\n      .map((x) => {\n        const hex = parseInt(x || '').toString(16)\n        return hex.length === 1 ? '0' + hex : hex\n      })\n      .join('')\n  )\n}\n\nexport const getColorByBgColor = (bgColor: string) => {\n  if (!bgColor) {\n    return ''\n  }\n  return parseInt(hexColor(bgColor).replace('#', ''), 16) > 0xffffff / 2\n    ? '#000'\n    : '#fff'\n}\n\nexport const AsyncButton = ({\n  children,\n  handleClick,\n  className,\n  color,\n  ...buttonProps\n}: {\n  children: JSX.Element | JSX.Element[] | string\n  className?: string\n  color?: string\n  handleClick: () => void\n} & ButtonProps) => {\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Button\n      {...buttonProps}\n      className={className}\n      onClick={async () => {\n        try {\n          setLoading(true)\n          await handleClick()\n        } finally {\n          setLoading(false)\n        }\n      }}\n    >\n      {loading ? (\n        <LoadingSpinner fill={color ? color : '#FFF'} height=\"15px\" />\n      ) : (\n        children\n      )}\n    </Button>\n  )\n}\n\nexport const AsyncButtonLight = ({\n  children,\n  handleClick,\n  className,\n  color,\n}: {\n  children: JSX.Element | JSX.Element[] | string\n  className?: string\n  color?: string\n  handleClick: () => void\n}) => {\n  const [loading, setLoading] = useState(false)\n  return (\n    <ButtonLight\n      className={className}\n      onClick={async () => {\n        try {\n          setLoading(true)\n          await handleClick()\n        } finally {\n          setLoading(false)\n        }\n      }}\n    >\n      {loading ? (\n        <LoadingSpinner fill={color ? color : '#FFF'} height=\"15px\" />\n      ) : (\n        children\n      )}\n    </ButtonLight>\n  )\n}\n"]}