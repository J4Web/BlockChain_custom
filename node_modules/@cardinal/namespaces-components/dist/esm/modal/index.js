import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "@emotion/react/jsx-runtime";
import styled from '@emotion/styled';
import darken from 'polished/lib/color/darken';
import { useEffect, useState } from 'react';
import { CloseIcon } from './icons';
export const Modal = ({ children, isOpen, onDismiss, darkenOverlay = true, hideCloseButton = false, }) => {
    const [mounted, setMounted] = useState(true);
    useEffect(() => {
        !isOpen
            ? setTimeout(() => {
                setMounted(false);
            }, 200)
            : setMounted(true);
    }, [isOpen]);
    return (_jsx(_Fragment, { children: _jsx(StyledDialogOverlay, Object.assign({ isOpen: isOpen, darkenOverlay: darkenOverlay, onClick: (e) => {
                e.stopPropagation();
                e.preventDefault();
                onDismiss();
            } }, { children: _jsxs(ModalWrapper, Object.assign({ onClick: (e) => {
                    e.stopPropagation();
                    e.preventDefault();
                } }, { children: [_jsxs(TopArea, { children: [_jsx("div", {}), hideCloseButton ? (_jsx("div", {})) : (_jsx(ButtonIcon, Object.assign({ onClick: (e) => {
                                    e.stopPropagation();
                                    e.preventDefault();
                                    onDismiss();
                                } }, { children: _jsx(CloseIcon, {}) })))] }), mounted && children] })) })) }));
};
const TopArea = styled.div `
  padding: 12px 16px 0px 16px;
  top: 12px;
  left: 16px;
  right: 16px;
  display: flex;
  align-items: center;
  justify-content: space-between;
`;
const ButtonIcon = styled.div `
  flex: 0 0 24px;
  cursor: pointer;
  color: #ccd2e3;
  &:hover {
    color: ${darken(0.1, '#ccd2e3')};
  }
  transition: 0.1s ease;
`;
const ModalWrapper = styled.div `
  * {
    box-sizing: border-box;
  }
  font-family: SFHello, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
    'Segoe UI Symbol';
  position: relative;
  box-shadow: 0px 4px 16px rgba(207, 207, 207, 0.25);
  width: 100%;
  max-width: 560px;
  border-radius: 8px;
  background: #fff;
  color: #696969;
  font-weight: normal;
  font-size: 12px;
  line-height: 15px;
  letter-spacing: -0.02em;
  color: #696969;
  margin: 10vh auto;
`;
const StyledDialogOverlay = styled.div `
  transition: 0.2s all;
  width: 100vw;
  height: 100vh;
  position: absolute;
  visibility: ${({ isOpen }) => (isOpen ? 'visible' : 'collapse')};
  opacity: ${({ isOpen }) => (isOpen ? '1' : '0')};
  background: ${({ darkenOverlay }) => darkenOverlay ? 'rgba(0, 0, 0, 0.55)' : 'none'};
  z-index: 1000;
`;
//# sourceMappingURL=index.js.map