{"version":3,"file":"TwitterHandleNFT.js","sourceRoot":"","sources":["../../../src/components/TwitterHandleNFT.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAA;AACjD,OAAO,MAAM,MAAM,iBAAiB,CAAA;AAQpC,MAAM,CAAC,MAAM,gBAAgB,GAAoB,CAAC,EAChD,MAAM,EACN,GAAG,EACH,OAAO,GACD,EAAE,EAAE;IACV,OAAO,CACL,KAAC,KAAK,cACJ,KAAC,SAAS,IACR,GAAG,EAAE,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,EAClC,GAAG,EAAE,WACH,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KACpB,0BAA0B,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,GACrD,OAAO,IAAI,YAAY,OAAO,EAChC,EAAE,GACF,GACI,CACT,CAAA;AACH,CAAC,CAAA;AAED,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;CAK3B,CAAA;AAED,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAA,EAAE,CAAA","sourcesContent":["import { formatName } from '@cardinal/namespaces'\nimport styled from '@emotion/styled'\n\ninterface Props {\n  handle: string\n  cluster?: string\n  dev?: boolean\n}\n\nexport const TwitterHandleNFT: React.FC<Props> = ({\n  handle,\n  dev,\n  cluster,\n}: Props) => {\n  return (\n    <Outer>\n      <StyledImg\n        alt={formatName('twitter', handle)}\n        src={`https://${\n          dev ? 'dev-nft' : 'nft'\n        }.cardinal.so/img/?text=${formatName('twitter', handle)}${\n          cluster && `&cluster=${cluster}`\n        }`}\n      />\n    </Outer>\n  )\n}\n\nconst StyledImg = styled.img`\n  border-radius: 10px;\n  height: 120px;\n  width: 120px;\n  box-shadow: 0 10px 16px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 10%);\n`\n\nconst Outer = styled.div``\n"]}