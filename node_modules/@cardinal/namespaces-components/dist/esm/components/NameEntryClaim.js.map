{"version":3,"file":"NameEntryClaim.js","sourceRoot":"","sources":["../../../src/components/NameEntryClaim.tsx"],"names":[],"mappings":"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","sourcesContent":["import styled from '@emotion/styled'\nimport type { Wallet } from '@saberhq/solana-contrib'\nimport type { Cluster, Connection } from '@solana/web3.js'\nimport { useMemo, useState } from 'react'\n\nimport { Alert } from '../common/Alert'\nimport { ButtonLight } from '../common/Button'\nimport { LoadingSpinner } from '../common/LoadingSpinner'\nimport { useHandleClaimTransaction } from '../handlers/useHandleClaimTransaction'\nimport { useHandleRevoke } from '../handlers/useHandleRevoke'\nimport { useHandleVerify } from '../handlers/useHandleVerify'\nimport { useClaimRequest } from '../hooks/useClaimRequest'\nimport { useNameEntryData } from '../hooks/useNameEntryData'\nimport { useReverseEntry } from '../hooks/useReverseEntry'\nimport { TWITTER_NAMESPACE_NAME } from '../utils/constants'\nimport { formatShortAddress, formatTwitterLink } from '../utils/format'\nimport { ButtonWithFooter } from './ButtonWithFooter'\nimport { Link, Megaphone, Verified } from './icons'\nimport { LabeledInput } from './LabeledInput'\nimport { PostTweet } from './PostTweet'\nimport { StepDetail } from './StepDetail'\nimport { TwitterHandleNFT } from './TwitterHandleNFT'\n\nconst handleFromTweetUrl = (raw: string | undefined): string | undefined => {\n  if (!raw) return undefined\n  return raw.split('/')[3]\n}\n\nconst tweetIdFromTweetUrl = (raw: string | undefined): string | undefined => {\n  if (!raw) return undefined\n  return raw.split('/')[5]?.split('?')[0]\n}\n\nexport const NameEntryClaim = ({\n  dev = false,\n  cluster = 'mainnet-beta',\n  wallet,\n  connection,\n  secondaryConnection,\n  namespaceName = TWITTER_NAMESPACE_NAME,\n  appName,\n  appTwitter,\n  setShowManage,\n  notify,\n  onComplete,\n}: {\n  dev?: boolean\n  cluster?: Cluster\n  wallet: Wallet\n  connection: Connection\n  secondaryConnection?: Connection\n  namespaceName?: string\n  appName?: string\n  appTwitter?: string\n  setShowManage: (m: boolean) => void\n  notify?: (arg: { message?: string; txid?: string }) => void\n  onComplete?: (arg0: string) => void\n}) => {\n  const [tweetSent, setTweetSent] = useState(false)\n  const [tweetUrl, setTweetUrl] = useState<string | undefined>(undefined)\n  const handle = handleFromTweetUrl(tweetUrl)\n  const tweetId = tweetIdFromTweetUrl(tweetUrl)\n  const [claimed, setClaimed] = useState(false)\n\n  const reverseEntry = useReverseEntry(\n    connection,\n    namespaceName,\n    wallet?.publicKey\n  )\n  const nameEntryData = useNameEntryData(\n    secondaryConnection || connection,\n    namespaceName,\n    handle\n  )\n  const claimRequest = useClaimRequest(\n    connection,\n    namespaceName,\n    handle,\n    wallet?.publicKey\n  )\n\n  const handleVerify = useHandleVerify(wallet, cluster, dev)\n  const handleRevoke = useHandleRevoke(wallet, cluster, dev)\n  const handleClaimTransaction = useHandleClaimTransaction(\n    connection,\n    wallet,\n    cluster,\n    dev\n  )\n\n  useMemo(() => {\n    if (tweetUrl && tweetSent && !claimRequest?.data?.parsed?.isApproved) {\n      handleVerify.mutate(\n        { tweetId, handle },\n        {\n          onSuccess: () => claimRequest?.refetch(),\n        }\n      )\n    }\n  }, [\n    wallet.publicKey.toString(),\n    tweetUrl,\n    handle,\n    tweetSent,\n    tweetId,\n    claimRequest.data?.pubkey.toString(),\n  ])\n\n  const alreadyOwned =\n    nameEntryData.data?.owner?.toString() && !nameEntryData.data?.isOwnerPDA\n      ? true\n      : false\n\n  return (\n    <>\n      <DetailsWrapper>\n        <StepDetail\n          disabled={!wallet?.publicKey || !connection}\n          icon={<Megaphone />}\n          title=\"Tweet!\"\n          description={\n            <>\n              <div>Tweet your public key</div>\n              <PostTweet\n                wallet={wallet}\n                appName={appName}\n                appTwitter={appTwitter}\n                disabled={false}\n                callback={() => setTweetSent(true)}\n                cluster={cluster}\n              />\n            </>\n          }\n        />\n        <StepDetail\n          disabled={!tweetSent}\n          icon={<Link />}\n          title=\"Paste the URL of the tweet\"\n          description={\n            <div>\n              <LabeledInput\n                disabled={!tweetSent}\n                label=\"Tweet\"\n                name=\"tweet\"\n                onChange={(e) => setTweetUrl(e.target.value)}\n              />\n            </div>\n          }\n        />\n        <StepDetail\n          disabled={!handle}\n          icon={<Verified />}\n          title=\"Claim your handle\"\n          description={\n            <>\n              <div>\n                You will receive a non-tradeable NFT to prove you own your\n                Twitter handle.\n              </div>\n              {handle && (\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '20px',\n                    paddingTop: '20px',\n                  }}\n                >\n                  <TwitterHandleNFT\n                    handle={handle}\n                    cluster={cluster}\n                    dev={dev}\n                  />\n                  <div\n                    style={{\n                      padding: '10px',\n                      width: 'calc(100% - 120px - 20px)',\n                    }}\n                  >\n                    {handleVerify.isLoading ? (\n                      <div className=\"mb-2 h-8 w-full animate-pulse rounded-lg bg-gray-200\"></div>\n                    ) : handleVerify.error ? (\n                      <Alert\n                        style={{\n                          margin: '10px 0px',\n                          height: 'auto',\n                          wordBreak: 'break-word',\n                        }}\n                        message={<>{`${handleVerify.error}`}</>}\n                        type=\"error\"\n                        showIcon\n                      />\n                    ) : (\n                      <Alert\n                        style={{\n                          margin: '10px 0px',\n                          height: 'auto',\n                          wordBreak: 'break-word',\n                        }}\n                        message={\n                          <>\n                            <div>\n                              Verified ownership of {formatTwitterLink(handle)}\n                            </div>\n                          </>\n                        }\n                        type=\"success\"\n                        showIcon\n                      />\n                    )}\n                    {nameEntryData.isFetching || claimRequest.isFetching ? (\n                      <div className=\"mb-2 h-8 min-w-full animate-pulse rounded-lg bg-gray-200\"></div>\n                    ) : (\n                      alreadyOwned &&\n                      !claimRequest.data?.parsed.isApproved && (\n                        <>\n                          <Alert\n                            style={{\n                              marginBottom: '10px',\n                              height: 'auto',\n                              wordBreak: 'break-word',\n                            }}\n                            message={\n                              <>\n                                <div>\n                                  Owned by{' '}\n                                  {formatShortAddress(\n                                    nameEntryData?.data?.owner\n                                  )}\n                                </div>\n                              </>\n                            }\n                            type=\"warning\"\n                            showIcon\n                          />\n                          {nameEntryData?.data?.owner?.toString() ===\n                          wallet?.publicKey?.toString() ? (\n                            <>\n                              <div>\n                                You already own this handle! If you want to set\n                                it as your default, visit the{' '}\n                                <span\n                                  className=\"cursor-pointer text-blue-500\"\n                                  onClick={() => setShowManage(true)}\n                                >\n                                  manage\n                                </span>{' '}\n                                tab.\n                              </div>\n                            </>\n                          ) : (\n                            <>\n                              <div>\n                                If you wish to continue, you will revoke this\n                                handle from them.\n                              </div>\n                              <ButtonWrapper>\n                                <ButtonLight\n                                  onClick={() =>\n                                    handleRevoke.mutate(\n                                      { tweetId, handle },\n                                      {\n                                        onSuccess: () => {\n                                          notify &&\n                                            notify({\n                                              message: 'Revoke successful',\n                                            })\n                                          nameEntryData.refetch()\n                                          claimRequest.refetch()\n                                        },\n                                      }\n                                    )\n                                  }\n                                >\n                                  {handleRevoke.isLoading ? (\n                                    <LoadingSpinner height=\"15px\" fill=\"#000\" />\n                                  ) : (\n                                    <>Revoke</>\n                                  )}\n                                </ButtonLight>\n                              </ButtonWrapper>\n                            </>\n                          )}\n                          {handleRevoke.error && (\n                            <Alert\n                              style={{\n                                marginTop: '10px',\n                                height: 'auto',\n                                wordBreak: 'break-word',\n                              }}\n                              message={\n                                <>\n                                  <div>{`${handleRevoke.error}`}</div>\n                                </>\n                              }\n                              type=\"error\"\n                              showIcon\n                            />\n                          )}\n                        </>\n                      )\n                    )}\n                  </div>\n                </div>\n              )}\n            </>\n          }\n        />\n        {handleClaimTransaction.error && (\n          <Alert\n            style={{\n              height: 'auto',\n              wordBreak: 'break-word',\n            }}\n            message={\n              <>\n                <div>{`${handleClaimTransaction.error}`}</div>\n              </>\n            }\n            type=\"error\"\n            showIcon\n          />\n        )}\n      </DetailsWrapper>\n      <ButtonWithFooter\n        loading={handleClaimTransaction.isLoading}\n        complete={claimed}\n        disabled={\n          !handleVerify.isSuccess ||\n          tweetUrl?.length === 0 ||\n          !nameEntryData.isFetched ||\n          (alreadyOwned && !claimRequest.data?.parsed.isApproved)\n        }\n        onClick={() =>\n          handleClaimTransaction.mutate(\n            {\n              tweetId,\n              handle,\n            },\n            {\n              onSuccess: () => {\n                nameEntryData.remove()\n                reverseEntry.remove()\n                onComplete && onComplete(handle || '')\n              },\n            }\n          )\n        }\n      >\n        Claim {handle && `@${handle}`}\n      </ButtonWithFooter>\n    </>\n  )\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin-top: 5px;\n  justify-content: center;\n`\n\nconst DetailsWrapper = styled.div`\n  display: grid;\n  grid-row-gap: 28px;\n`\n"]}