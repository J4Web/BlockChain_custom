import { __awaiter } from "tslib";
import { getClaimRequest } from '@cardinal/namespaces';
import { useQuery } from 'react-query';
export const useClaimRequest = (connection, namespaceName, entryName, pubkey) => {
    return useQuery(['useClaimRequest', namespaceName, entryName, pubkey === null || pubkey === void 0 ? void 0 : pubkey.toString()], () => __awaiter(void 0, void 0, void 0, function* () {
        if (!pubkey || !entryName || !connection)
            return;
        return getClaimRequest(connection, namespaceName, entryName, pubkey);
    }), {
        enabled: !!pubkey && !!entryName && !!connection,
        refetchOnMount: false,
        refetchOnWindowFocus: false,
    });
};
//# sourceMappingURL=useClaimRequest.js.map