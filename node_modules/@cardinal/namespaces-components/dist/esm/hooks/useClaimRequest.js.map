{"version":3,"file":"useClaimRequest.js","sourceRoot":"","sources":["../../../src/hooks/useClaimRequest.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAA;AAEtD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAEtC,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,UAAkC,EAClC,aAAqB,EACrB,SAA6B,EAC7B,MAA6B,EAC7B,EAAE;IACF,OAAO,QAAQ,CACb,CAAC,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,CAAC,EACjE,GAAS,EAAE;QACT,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU;YAAE,OAAM;QAChD,OAAO,eAAe,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAA;IACtE,CAAC,CAAA,EACD;QACE,OAAO,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,UAAU;QAChD,cAAc,EAAE,KAAK;QACrB,oBAAoB,EAAE,KAAK;KAC5B,CACF,CAAA;AACH,CAAC,CAAA","sourcesContent":["import type { AccountData } from '@cardinal/certificates'\nimport type { ClaimRequestData } from '@cardinal/namespaces'\nimport { getClaimRequest } from '@cardinal/namespaces'\nimport type { Connection, PublicKey } from '@solana/web3.js'\nimport { useQuery } from 'react-query'\n\nexport const useClaimRequest = (\n  connection: Connection | undefined,\n  namespaceName: string,\n  entryName: string | undefined,\n  pubkey: PublicKey | undefined\n) => {\n  return useQuery<AccountData<ClaimRequestData> | undefined>(\n    ['useClaimRequest', namespaceName, entryName, pubkey?.toString()],\n    async () => {\n      if (!pubkey || !entryName || !connection) return\n      return getClaimRequest(connection, namespaceName, entryName, pubkey)\n    },\n    {\n      enabled: !!pubkey && !!entryName && !!connection,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }\n  )\n}\n"]}