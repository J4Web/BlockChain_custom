import type { CertificateData } from '@cardinal/certificates';
import type { AccountData } from '@cardinal/common';
import type { TokenManagerData } from '@cardinal/token-manager/dist/cjs/programs/tokenManager';
import * as metaplex from '@metaplex-foundation/mpl-token-metadata';
import type { AccountInfo, Connection, ParsedAccountData } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
export declare type UserTokenData = {
    tokenAccount?: {
        pubkey: PublicKey;
        account: AccountInfo<ParsedAccountData>;
    };
    metaplexData?: AccountData<metaplex.MetadataData>;
    tokenManager?: AccountData<TokenManagerData>;
    certificate?: AccountData<CertificateData> | null;
};
export declare const useUserNamesForNamespace: (connection: Connection, walletId: PublicKey | undefined, namespaceName: string) => import("react-query").UseQueryResult<UserTokenData[], unknown>;
//# sourceMappingURL=useUserNamesForNamespace.d.ts.map