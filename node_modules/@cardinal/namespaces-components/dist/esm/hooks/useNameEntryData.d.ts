import type { AccountData, CertificateData } from '@cardinal/certificates';
import type { EntryData } from '@cardinal/namespaces';
import * as metaplex from '@metaplex-foundation/mpl-token-metadata';
import type { Connection, TokenAccountBalancePair } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
export declare type NameEntryData = {
    nameEntry: AccountData<EntryData>;
    certificate?: AccountData<CertificateData>;
    metaplexData?: AccountData<metaplex.MetadataData>;
    arweaveData?: AccountData<any>;
    largestHolders: TokenAccountBalancePair[];
    owner: PublicKey | undefined;
    isOwnerPDA: boolean;
};
export declare function getNameEntryData(connection: Connection, namespaceName: string, entryName: string): Promise<NameEntryData>;
export declare const useNameEntryData: (connection: Connection | undefined, namespaceName: string, entryName: string | undefined) => import("react-query").UseQueryResult<NameEntryData | undefined, unknown>;
//# sourceMappingURL=useNameEntryData.d.ts.map