{"version":3,"file":"format.js","sourceRoot":"","sources":["../../../src/utils/format.tsx"],"names":[],"mappings":"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","sourcesContent":["import { shortenAddress } from '@cardinal/namespaces'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { apiBase, TWITTER_NAMESPACE_NAME } from './constants'\n\nexport const formatTwitterLink = (handle: string | undefined) => {\n  if (!handle) return <></>\n  return (\n    <a\n      href={`https://twitter.com/${handle}`}\n      style={{ color: '#177ddc' }}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {handle}\n    </a>\n  )\n}\n\nexport function shortPubKey(pubkey: PublicKey | string | null | undefined) {\n  if (!pubkey) return ''\n  return `${pubkey?.toString().substring(0, 4)}..${pubkey\n    ?.toString()\n    .substring(pubkey?.toString().length - 4)}`\n}\n\nexport const tryPublicKey = (\n  publicKeyString: PublicKey | string | string[] | undefined | null\n): PublicKey | null => {\n  if (publicKeyString instanceof PublicKey) return publicKeyString\n  if (!publicKeyString) return null\n  try {\n    return new PublicKey(publicKeyString)\n  } catch (e) {\n    return null\n  }\n}\n\nexport const formatShortAddress = (address: PublicKey | undefined) => {\n  if (!address) return <></>\n  return (\n    <a\n      href={`https://explorer.solana.com/address/${address.toString()}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {shortenAddress(address.toString())}\n    </a>\n  )\n}\n\nexport async function tryGetImageUrl(\n  namespace: string,\n  name: string,\n  dev?: boolean\n): Promise<string | undefined> {\n  try {\n    if (namespace === TWITTER_NAMESPACE_NAME) {\n      const response = await fetch(\n        `${apiBase(\n          dev\n        )}/namespaces/twitter/proxy?url=https://api.twitter.com/2/users/by&usernames=${name}&user.fields=profile_image_url`\n      )\n      const json = (await response.json()) as {\n        data: { profile_image_url: string }[]\n      }\n      return json?.data[0]?.profile_image_url.replace('_normal', '') as string\n    }\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function tryGetProfile(\n  handle: string,\n  dev?: boolean\n): Promise<\n  | { profile_image_url: string; username: string; id: string; name: string }\n  | undefined\n> {\n  try {\n    const response = await fetch(\n      `${apiBase(\n        dev\n      )}/namespaces/twitter/proxy?url=https://api.twitter.com/2/users/by&usernames=${handle}&user.fields=profile_image_url`\n    )\n    const json = (await response.json()) as {\n      data: {\n        profile_image_url: string\n        username: string\n        id: string\n        name: string\n      }[]\n    }\n    return {\n      profile_image_url: json?.data[0]?.profile_image_url.replace(\n        '_normal',\n        ''\n      ) as string,\n      username: json?.data[0]?.username as string,\n      id: json?.data[0]?.id as string,\n      name: json?.data[0]?.name as string,\n    }\n  } catch (e) {\n    return undefined\n  }\n}\n"]}